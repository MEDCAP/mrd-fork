# ADD: gradient field
# similar to acquisition field, gradient shape described with timestamp
# Alternative structure is optional rotation in the header for, e.g., oblique slices
GradientElement: !record
  fields:
    gx: float # mT/m
    gy: float 
    gz: float

# gradient xyz stored as 2D array with a shape of (samples, 3)
GradientData: !array
  items: GradientElement
  dimension: samples

GradientHeader: !record
  fields:
    # Clock time stamp, microseconds since AcquisitionTimeStamp
    gradientTimeStampUs: float
    # Gradient sample duration in microseconds
    gradientSampleTimeUs: float
    # Grad calibration (T/m/A). Can be here or as a calGradMap calibration image or neither
    pulseCalibration: float*?

Grad: !record
  fields:
    # Gradient header
    head: GradientHeader
    # Raw pulse amplitude/phase samples array
    data: GradientData
  computedFields:
    samples: size(data, "samples")
    starttime: head.gradientTimeStampUs
    endtime: head.gradientTimeStampUs + size(data, "samples") * head.gradientSampleTimeUs